
                                         JAVA SORTING

sorting::::

          sorting is arrainging the elements in an array in a particular order.

1) selection sorting
2) insertion sorting
3) bubble sorting

1) selection sort::::
We can create a java program to sort array elements using selection sort.
 In selection sort algorithm, we search for the lowest element and arrange it to the proper location.
 We swap the current element with the next lowest number.

int[] array = {1,5,2,3,8};

for(int i=0; i< array.length-1;i++){
int index= 2;
       
for(int j=i+1==2; j<=array.length;j++){

if(array[j==2] ==1 < array[index==2]){
  
index=j; // lowest index

}
}

 int smallestNum = arr[2]==1;

array[2]= array[0];

array[0]= smallestNum;


---------------------------------------------------------------------------------


  insertion sorting::::
  
            5 1 6 2 4 3
            1 5 6 2 4 3
            1 2 5 6 4 3
            1 2 4 5 6 3
            1 2 3 4 5 6

in insertion sorting it will compare with the before elements.


int a[6]= {1,5,6,2,4,3};

int i, j , key;

for(int i=1; i<=6 ; i++){

key = a[i];

j=i-1;

while(j>=0 && key < a[j])
{

a[j+1]=a[j];
j--
}

a[j+1]= key;
}

}

------------------------------------------------------------------------------------


Bubble sort::::

            Here, current element is compared with the next element, if the current element
is greater than the next element, it is swapped.


  1 5 6 2 4 3
int temp =5;
for(int i=0; i<=6 ; i++){

         for(int j=1; j<=5 ; j++){

          if (arr[j-1]> arr[j]){

           temp = arr[0];
           arr[0]=arr[1];
            arr[1] = 5;
}

}









Following example shows how to use sort () and binarySearch () method to accomplish the task.\
 The user defined method printArray () is used to display the output:

import java.util.Arrays;

public class MainClass {
   public static void main(String args[]) throws Exception {
      int array[] = { 2, 5, -2, 6, -3, 8, 0, -7, -9, 4 };
      Arrays.sort(array);
      printArray("Sorted array", array);
      int index = Arrays.binarySearch(array, 2);
      System.out.println("Found 2 @ " + index);
   }
   private static void printArray(String message, int array[]) {
      System.out.println(message + ": [length: " + array.length + "]");
      
      for (int i = 0; i < array.length; i++) {
         if(i != 0) {
            System.out.print(", ");
         }
         System.out.print(array[i]);                     
      }
      System.out.println();
   }
}
Result
The above code sample will produce the following result.

Sorted array: [length: 10]
-9, -7, -3, -2, 0, 2, 4, 5, 6, 8
Found 2 @ 5
------------------------------------

selection sort
We can create a java program to sort array elements using selection sort. In selection sort algorithm, we search for the lowest element and arrange it to the proper location. We swap the current element with the next lowest number.

